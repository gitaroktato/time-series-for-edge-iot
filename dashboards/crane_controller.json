[{"apiVersion":"influxdata.com/v2alpha1","kind":"Dashboard","metadata":{"name":"beautiful-fermat-ddb001"},"spec":{"charts":[{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colorizeRows":true,"colors":[{"id":"faucMsthgbDPval9Wy6mx","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"rHzOB4cUVikRI7sAdcrTA","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"dcVJbqWM6kCw07sg7j1V5","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":4,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Controller current data","opacity":1,"orientationThreshold":100000000,"position":"overlaid","queries":[{"query":"from(bucket: \"sensors\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"controller\")\n  |> filter(fn: (r) => r[\"_field\"] == \"x\" or r[\"_field\"] == \"y\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{"colorizeRows":true,"opacity":1,"orientationThreshold":100000000,"widthRatio":1},"width":3,"widthRatio":1,"xCol":"_time","yCol":"_value"},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colorizeRows":true,"colors":[{"id":"faucMsthgbDPval9Wy6mx","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"rHzOB4cUVikRI7sAdcrTA","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"dcVJbqWM6kCw07sg7j1V5","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":4,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Controller motion rate","opacity":1,"orientationThreshold":100000000,"position":"overlaid","queries":[{"query":"import \"influxdata/influxdb/schema\"\nimport \"math\"\n\nfrom(bucket: \"sensors\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"controller\")\n  |> filter(fn: (r) => r[\"_field\"] == \"x\" or r[\"_field\"] == \"y\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> schema.fieldsAsCols()\n  |> map(fn: (r) => ({ r with _value: math.mMax(x:r.x, y:r.y) }))  \n  |> yield(name: \"derivative\")"}],"staticLegend":{"colorizeRows":true,"opacity":1,"orientationThreshold":100000000,"widthRatio":1},"width":3,"widthRatio":1,"xCol":"_time","xPos":3,"yCol":"_value"},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"ruby","type":"max","hex":"#BF3D5E","value":1024}],"decimalPlaces":2,"height":4,"kind":"Gauge","name":"Too crazy moves!","queries":[{"query":"import \"influxdata/influxdb/schema\"\nimport \"math\"\ncrazynessThreshold = 250\n\nfrom(bucket: \"sensors\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"controller\")\n  |> filter(fn: (r) => r[\"_field\"] == \"x\" or r[\"_field\"] == \"y\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> schema.fieldsAsCols()\n  |> map(fn: (r) => ({ r with _value: math.mMax(x:r.x, y:r.y) }))  \n  |> filter(fn: (r) => r._value > crazynessThreshold)\n  |> yield(name: \"too_crazy_moves\")"}],"staticLegend":{},"width":3,"xPos":9}],"name":"Crane Controller"}}]